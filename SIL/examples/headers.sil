import imap
import imap_config
import string

// Get the configuration from the environment and command line.
config = imap_config.getConfig(commandLineArguments)

// -------------------------------------------------------------------------------------------------
// Some helper functions.
//
// Firstly, a field formatter which strips the field prefix and pads to a fixed width.
// E.g., ("From: me@here.com" |> fmtField(20)) == "me@here.com         "

fmtField(field, width) => {
// Use the following when we know how to concat arrayOf char and string.
//  field
//    |> findSplitAfter(": ").after
//    |> padRight(' ', width)
//    |> array

  // Using this in the meantime.
  pad(str) => iota(width - len(str)) |> fold((a, i) => a ~ " ", str)
  in field
    |> string.split(": ")[1:$]
    |> fold((a, s) => a ~ s, "")
    |> pad
}

// Secondly, a function to join an array of strings.

joinFields(flds, sep) => {
  fold(flds[1:$], (str, fld) => str ~ sep ~ fld, flds[0])
}

// And thirdly, a function which concatenates the headers into a formatted string.

fmtHeaders(outStr, headers) => {
  outStr ~ "  " ~ joinFields(headers, " | ") ~ "\n"
}

// -------------------------------------------------------------------------------------------------

// Connect to the inbox.
creds = imap.ImapLogin(config.user, config.pass)
server = imap.ImapServer(config.host, config.port)
session =
  imap.Session(server, creds)
  |> imap.openConnection().returnValue
  |> imap.login().returnValue
inbox = imap.Mailbox("INBOX", "", '/')

// Get the number of messages in the inbox.
msgCount = imap.status(session, inbox).returnValue.messages

// Select the default inbox.
inbox |> imap.examine(session, _)

// Get the headers (date, from and subject) for each message, from oldest to newest, format and
// print them.
headers =
  iota(msgCount)
    |> map(id => "#" ~ toString(id + 1))
    |> map(id =>
         imap.fetchFields(session, id, "date from subject").returnValue.lines
           |> map(hdr => fmtField(hdr, 40)))
    |> fold(fmtHeaders, "INBOX:\n")
print(headers)
